
#line 10
struct v2f {
    highp vec4 pos;
    highp float fog;
    highp vec2 uv;
    highp vec4 color;
};
#line 3
struct a2v {
    highp vec4 pos;
    highp vec2 uv;
    highp vec3 normal;
    highp vec4 color;
};
#line 1
uniform highp mat4 mvp;
#line 17
#line 22
highp vec4 DoPosMul( in highp vec4 pos, in highp mat4 mvp );
highp vec4 DoColor( in highp vec4 color, in highp vec3 normal );
v2f xlat_main( in a2v v );
#line 17
highp vec4 DoPosMul( in highp vec4 pos, in highp mat4 mvp ) {
    return (mvp * pos);
}
#line 22
highp vec4 DoColor( in highp vec4 color, in highp vec3 normal ) {
    highp vec4 c = color;
    c.xyz += normal;
    #line 26
    return c;
}
#line 29
v2f xlat_main( in a2v v ) {
    #line 31
    v2f o;
    o.pos = DoPosMul( v.pos, mvp);
    o.color = DoColor( v.color, v.normal);
    o.uv = v.uv;
    #line 35
    return o;
}
varying highp float xlv_FOG;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main() {
    v2f xl_retval;
    a2v xlt_v;
    xlt_v.pos = vec4(gl_Vertex);
    xlt_v.uv = vec2(gl_MultiTexCoord0);
    xlt_v.normal = vec3(gl_Normal);
    xlt_v.color = vec4(gl_Color);
    xl_retval = xlat_main( xlt_v);
    gl_Position = vec4( xl_retval.pos);
    xlv_FOG = float( xl_retval.fog);
    xlv_TEXCOORD0 = vec2( xl_retval.uv);
    xlv_COLOR = vec4( xl_retval.color);
}

// uniforms:
// mvp:<none> type 21 arrsize 0
