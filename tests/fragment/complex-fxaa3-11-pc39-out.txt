#extension GL_ARB_shader_texture_lod : require
vec4 xll_tex2Dlod(sampler2D s, vec4 coord) {
   return texture2DLod( s, coord.xy, coord.w);
}
float xll_saturate( float x) {
  return clamp( x, 0.0, 1.0);
}
vec2 xll_saturate( vec2 x) {
  return clamp( x, 0.0, 1.0);
}
vec3 xll_saturate( vec3 x) {
  return clamp( x, 0.0, 1.0);
}
vec4 xll_saturate( vec4 x) {
  return clamp( x, 0.0, 1.0);
}
mat2 xll_saturate(mat2 m) {
  return mat2( clamp(m[0], 0.0, 1.0), clamp(m[1], 0.0, 1.0));
}
mat3 xll_saturate(mat3 m) {
  return mat3( clamp(m[0], 0.0, 1.0), clamp(m[1], 0.0, 1.0), clamp(m[2], 0.0, 1.0));
}
mat4 xll_saturate(mat4 m) {
  return mat4( clamp(m[0], 0.0, 1.0), clamp(m[1], 0.0, 1.0), clamp(m[2], 0.0, 1.0), clamp(m[3], 0.0, 1.0));
}
#line 968
struct v2f {
    vec4 pos;
    vec2 uv;
    vec4 uvPosPos;
};
uniform sampler2D _MainTex;
uniform vec4 _MainTex_TexelSize;
float FxaaLuma( in vec4 rgba );
vec4 FxaaPixelShader( in vec2 pos, in vec4 fxaaConsolePosPos, in sampler2D tex, in sampler2D fxaaConsole360TexExpBiasNegOne, in sampler2D fxaaConsole360TexExpBiasNegTwo, in vec2 fxaaQualityRcpFrame, in vec4 fxaaConsoleRcpFrameOpt, in vec4 fxaaConsoleRcpFrameOpt2, in vec4 fxaaConsole360RcpFrameOpt2, in float fxaaQualitySubpix, in float fxaaQualityEdgeThreshold, in float fxaaQualityEdgeThresholdMin, in float fxaaConsoleEdgeSharpness, in float fxaaConsoleEdgeThreshold, in float fxaaConsoleEdgeThresholdMin, in vec4 fxaaConsole360ConstDir );
vec4 xlat_main( in v2f i );
#line 342
float FxaaLuma( in vec4 rgba ) {
    return rgba.w ;
}
#line 508
vec4 FxaaPixelShader( in vec2 pos, in vec4 fxaaConsolePosPos, in sampler2D tex, in sampler2D fxaaConsole360TexExpBiasNegOne, in sampler2D fxaaConsole360TexExpBiasNegTwo, in vec2 fxaaQualityRcpFrame, in vec4 fxaaConsoleRcpFrameOpt, in vec4 fxaaConsoleRcpFrameOpt2, in vec4 fxaaConsole360RcpFrameOpt2, in float fxaaQualitySubpix, in float fxaaQualityEdgeThreshold, in float fxaaQualityEdgeThresholdMin, in float fxaaConsoleEdgeSharpness, in float fxaaConsoleEdgeThreshold, in float fxaaConsoleEdgeThresholdMin, in vec4 fxaaConsole360ConstDir ) {
    vec2 posM;
    vec4 rgbyM;
    float lumaS;
    float lumaE;
    float lumaN;
    float lumaW;
    float maxSM;
    float minSM;
    float maxESM;
    float minESM;
    float maxWN;
    float minWN;
    float rangeMax;
    float rangeMin;
    float rangeMaxScaled;
    float range;
    float rangeMaxClamped;
    bool earlyExit;
    float lumaNW;
    float lumaSE;
    float lumaNE;
    float lumaSW;
    float lumaNS;
    float lumaWE;
    float subpixRcpRange;
    float subpixNSWE;
    float edgeHorz1;
    float edgeVert1;
    float lumaNESE;
    float lumaNWNE;
    float edgeHorz2;
    float edgeVert2;
    float lumaNWSW;
    float lumaSWSE;
    float edgeHorz4;
    float edgeVert4;
    float edgeHorz3;
    float edgeVert3;
    float edgeHorz;
    float edgeVert;
    float subpixNWSWNESE;
    float lengthSign;
    bool horzSpan;
    float subpixA;
    float subpixB;
    float gradientN;
    float gradientS;
    float lumaNN;
    float lumaSS;
    bool pairN;
    float gradient;
    float subpixC;
    vec2 posB;
    vec2 offNP;
    vec2 posN;
    vec2 posP;
    float subpixD;
    float lumaEndN;
    float subpixE;
    float lumaEndP;
    float gradientScaled;
    float lumaMM;
    float subpixF;
    bool lumaMLTZero;
    bool doneN;
    bool doneP;
    bool doneNP;
    float dstN;
    float dstP;
    bool goodSpanN;
    float spanLength;
    bool goodSpanP;
    float spanLengthRcp;
    bool directionN;
    float dst;
    bool goodSpan;
    float subpixG;
    float pixelOffset;
    float subpixH;
    float pixelOffsetGood;
    float pixelOffsetSubpix;
    posM.x  = pos.x ;
    #line 512
    posM.y  = pos.y ;
    #line 539
    rgbyM = xll_tex2Dlod( tex, vec4( posM, 0.0, 0.0));
    #line 545
    lumaS = FxaaLuma( xll_tex2Dlod( tex, vec4( (posM + (vec2( 0.0, 1.0) * fxaaQualityRcpFrame.xy )), 0.0, 0.0)));
    lumaE = FxaaLuma( xll_tex2Dlod( tex, vec4( (posM + (vec2( 1.0, 0.0) * fxaaQualityRcpFrame.xy )), 0.0, 0.0)));
    lumaN = FxaaLuma( xll_tex2Dlod( tex, vec4( (posM + (vec2( 0.0, -1.0) * fxaaQualityRcpFrame.xy )), 0.0, 0.0)));
    lumaW = FxaaLuma( xll_tex2Dlod( tex, vec4( (posM + (vec2( -1.0, 0.0) * fxaaQualityRcpFrame.xy )), 0.0, 0.0)));
    #line 551
    maxSM = max( lumaS, rgbyM.w );
    minSM = min( lumaS, rgbyM.w );
    maxESM = max( lumaE, maxSM);
    minESM = min( lumaE, minSM);
    #line 555
    maxWN = max( lumaN, lumaW);
    minWN = min( lumaN, lumaW);
    rangeMax = max( maxWN, maxESM);
    rangeMin = min( minWN, minESM);
    #line 559
    rangeMaxScaled = (rangeMax * fxaaQualityEdgeThreshold);
    range = (rangeMax - rangeMin);
    rangeMaxClamped = max( fxaaQualityEdgeThresholdMin, rangeMaxScaled);
    earlyExit = (range < rangeMaxClamped);
    #line 564
    if ( earlyExit ){
        return rgbyM;
    }
    #line 572
    lumaNW = FxaaLuma( xll_tex2Dlod( tex, vec4( (posM + (vec2( -1.0, -1.0) * fxaaQualityRcpFrame.xy )), 0.0, 0.0)));
    lumaSE = FxaaLuma( xll_tex2Dlod( tex, vec4( (posM + (vec2( 1.0, 1.0) * fxaaQualityRcpFrame.xy )), 0.0, 0.0)));
    lumaNE = FxaaLuma( xll_tex2Dlod( tex, vec4( (posM + (vec2( 1.0, -1.0) * fxaaQualityRcpFrame.xy )), 0.0, 0.0)));
    lumaSW = FxaaLuma( xll_tex2Dlod( tex, vec4( (posM + (vec2( -1.0, 1.0) * fxaaQualityRcpFrame.xy )), 0.0, 0.0)));
    #line 581
    lumaNS = (lumaN + lumaS);
    lumaWE = (lumaW + lumaE);
    subpixRcpRange = (1.0 / range);
    subpixNSWE = (lumaNS + lumaWE);
    #line 585
    edgeHorz1 = ((-2.0 * rgbyM.w ) + lumaNS);
    edgeVert1 = ((-2.0 * rgbyM.w ) + lumaWE);
    lumaNESE = (lumaNE + lumaSE);
    #line 589
    lumaNWNE = (lumaNW + lumaNE);
    edgeHorz2 = ((-2.0 * lumaE) + lumaNESE);
    edgeVert2 = ((-2.0 * lumaN) + lumaNWNE);
    #line 593
    lumaNWSW = (lumaNW + lumaSW);
    lumaSWSE = (lumaSW + lumaSE);
    edgeHorz4 = ((abs( edgeHorz1 ) * 2.0) + abs( edgeHorz2 ));
    edgeVert4 = ((abs( edgeVert1 ) * 2.0) + abs( edgeVert2 ));
    #line 597
    edgeHorz3 = ((-2.0 * lumaW) + lumaNWSW);
    edgeVert3 = ((-2.0 * lumaS) + lumaSWSE);
    edgeHorz = (abs( edgeHorz3 ) + edgeHorz4);
    edgeVert = (abs( edgeVert3 ) + edgeVert4);
    #line 602
    subpixNWSWNESE = (lumaNWSW + lumaNESE);
    lengthSign = fxaaQualityRcpFrame.x ;
    horzSpan = (edgeHorz >= edgeVert);
    subpixA = ((subpixNSWE * 2.0) + subpixNWSWNESE);
    #line 607
    if ( ( !horzSpan ) ){
        lumaN = lumaW;
    }
    if ( ( !horzSpan ) ){
        lumaS = lumaE;
    }
    if ( horzSpan ){
        lengthSign = fxaaQualityRcpFrame.y ;
    }
    subpixB = ((subpixA * 0.0833333) - rgbyM.w );
    #line 612
    gradientN = (lumaN - rgbyM.w );
    gradientS = (lumaS - rgbyM.w );
    lumaNN = (lumaN + rgbyM.w );
    lumaSS = (lumaS + rgbyM.w );
    #line 616
    pairN = (abs( gradientN ) >= abs( gradientS ));
    gradient = max( abs( gradientN ), abs( gradientS ));
    if ( pairN ){
        lengthSign = ( -lengthSign );
    }
    subpixC = xll_saturate( (abs( subpixB ) * subpixRcpRange) );
    #line 622
    posB.x  = posM.x ;
    posB.y  = posM.y ;
    offNP.x  = (( ( !horzSpan ) ) ? ( 0.0 ) : ( fxaaQualityRcpFrame.x  ));
    #line 626
    offNP.y  = (( horzSpan ) ? ( 0.0 ) : ( fxaaQualityRcpFrame.y  ));
    if ( ( !horzSpan ) ){
        posB.x  += (lengthSign * 0.5);
    }
    if ( horzSpan ){
        posB.y  += (lengthSign * 0.5);
    }
    #line 631
    posN.x  = (posB.x  - (offNP.x  * 1.0));
    posN.y  = (posB.y  - (offNP.y  * 1.0));
    posP.x  = (posB.x  + (offNP.x  * 1.0));
    #line 635
    posP.y  = (posB.y  + (offNP.y  * 1.0));
    subpixD = ((-2.0 * subpixC) + 3.0);
    lumaEndN = FxaaLuma( xll_tex2Dlod( tex, vec4( posN, 0.0, 0.0)));
    subpixE = (subpixC * subpixC);
    #line 639
    lumaEndP = FxaaLuma( xll_tex2Dlod( tex, vec4( posP, 0.0, 0.0)));
    if ( ( !pairN ) ){
        lumaNN = lumaSS;
    }
    gradientScaled = ((gradient * 1.0) / 4.0);
    #line 643
    lumaMM = (rgbyM.w  - (lumaNN * 0.5));
    subpixF = (subpixD * subpixE);
    lumaMLTZero = (lumaMM < 0.0);
    #line 647
    lumaEndN -= (lumaNN * 0.5);
    lumaEndP -= (lumaNN * 0.5);
    doneN = (abs( lumaEndN ) >= gradientScaled);
    doneP = (abs( lumaEndP ) >= gradientScaled);
    #line 651
    if ( ( !doneN ) ){
        posN.x  -= (offNP.x  * 1.0);
    }
    if ( ( !doneN ) ){
        posN.y  -= (offNP.y  * 1.0);
    }
    doneNP = (( !doneN ) || ( !doneP ));
    if ( ( !doneP ) ){
        posP.x  += (offNP.x  * 1.0);
    }
    #line 655
    if ( ( !doneP ) ){
        posP.y  += (offNP.y  * 1.0);
    }
    if ( doneNP ){
        if ( ( !doneN ) ){
            lumaEndN = FxaaLuma( xll_tex2Dlod( tex, vec4( posN.xy , 0.0, 0.0)));
        }
        #line 659
        if ( ( !doneP ) ){
            lumaEndP = FxaaLuma( xll_tex2Dlod( tex, vec4( posP.xy , 0.0, 0.0)));
        }
        if ( ( !doneN ) ){
            lumaEndN = (lumaEndN - (lumaNN * 0.5));
        }
        if ( ( !doneP ) ){
            lumaEndP = (lumaEndP - (lumaNN * 0.5));
        }
        doneN = (abs( lumaEndN ) >= gradientScaled);
        #line 663
        doneP = (abs( lumaEndP ) >= gradientScaled);
        if ( ( !doneN ) ){
            posN.x  -= (offNP.x  * 1.0);
        }
        if ( ( !doneN ) ){
            posN.y  -= (offNP.y  * 1.0);
        }
        doneNP = (( !doneN ) || ( !doneP ));
        #line 667
        if ( ( !doneP ) ){
            posP.x  += (offNP.x  * 1.0);
        }
        if ( ( !doneP ) ){
            posP.y  += (offNP.y  * 1.0);
        }
        #line 671
        if ( doneNP ){
            if ( ( !doneN ) ){
                lumaEndN = FxaaLuma( xll_tex2Dlod( tex, vec4( posN.xy , 0.0, 0.0)));
            }
            if ( ( !doneP ) ){
                lumaEndP = FxaaLuma( xll_tex2Dlod( tex, vec4( posP.xy , 0.0, 0.0)));
            }
            if ( ( !doneN ) ){
                lumaEndN = (lumaEndN - (lumaNN * 0.5));
            }
            #line 675
            if ( ( !doneP ) ){
                lumaEndP = (lumaEndP - (lumaNN * 0.5));
            }
            doneN = (abs( lumaEndN ) >= gradientScaled);
            doneP = (abs( lumaEndP ) >= gradientScaled);
            if ( ( !doneN ) ){
                posN.x  -= (offNP.x  * 1.0);
            }
            #line 679
            if ( ( !doneN ) ){
                posN.y  -= (offNP.y  * 1.0);
            }
            doneNP = (( !doneN ) || ( !doneP ));
            if ( ( !doneP ) ){
                posP.x  += (offNP.x  * 1.0);
            }
            if ( ( !doneP ) ){
                posP.y  += (offNP.y  * 1.0);
            }
            #line 685
            if ( doneNP ){
                if ( ( !doneN ) ){
                    lumaEndN = FxaaLuma( xll_tex2Dlod( tex, vec4( posN.xy , 0.0, 0.0)));
                }
                if ( ( !doneP ) ){
                    lumaEndP = FxaaLuma( xll_tex2Dlod( tex, vec4( posP.xy , 0.0, 0.0)));
                }
                if ( ( !doneN ) ){
                    lumaEndN = (lumaEndN - (lumaNN * 0.5));
                }
                #line 689
                if ( ( !doneP ) ){
                    lumaEndP = (lumaEndP - (lumaNN * 0.5));
                }
                doneN = (abs( lumaEndN ) >= gradientScaled);
                doneP = (abs( lumaEndP ) >= gradientScaled);
                if ( ( !doneN ) ){
                    posN.x  -= (offNP.x  * 1.0);
                }
                #line 693
                if ( ( !doneN ) ){
                    posN.y  -= (offNP.y  * 1.0);
                }
                doneNP = (( !doneN ) || ( !doneP ));
                if ( ( !doneP ) ){
                    posP.x  += (offNP.x  * 1.0);
                }
                if ( ( !doneP ) ){
                    posP.y  += (offNP.y  * 1.0);
                }
                #line 699
                if ( doneNP ){
                    if ( ( !doneN ) ){
                        lumaEndN = FxaaLuma( xll_tex2Dlod( tex, vec4( posN.xy , 0.0, 0.0)));
                    }
                    if ( ( !doneP ) ){
                        lumaEndP = FxaaLuma( xll_tex2Dlod( tex, vec4( posP.xy , 0.0, 0.0)));
                    }
                    if ( ( !doneN ) ){
                        lumaEndN = (lumaEndN - (lumaNN * 0.5));
                    }
                    #line 703
                    if ( ( !doneP ) ){
                        lumaEndP = (lumaEndP - (lumaNN * 0.5));
                    }
                    doneN = (abs( lumaEndN ) >= gradientScaled);
                    doneP = (abs( lumaEndP ) >= gradientScaled);
                    if ( ( !doneN ) ){
                        posN.x  -= (offNP.x  * 1.5);
                    }
                    #line 707
                    if ( ( !doneN ) ){
                        posN.y  -= (offNP.y  * 1.5);
                    }
                    doneNP = (( !doneN ) || ( !doneP ));
                    if ( ( !doneP ) ){
                        posP.x  += (offNP.x  * 1.5);
                    }
                    if ( ( !doneP ) ){
                        posP.y  += (offNP.y  * 1.5);
                    }
                    #line 713
                    if ( doneNP ){
                        if ( ( !doneN ) ){
                            lumaEndN = FxaaLuma( xll_tex2Dlod( tex, vec4( posN.xy , 0.0, 0.0)));
                        }
                        if ( ( !doneP ) ){
                            lumaEndP = FxaaLuma( xll_tex2Dlod( tex, vec4( posP.xy , 0.0, 0.0)));
                        }
                        if ( ( !doneN ) ){
                            lumaEndN = (lumaEndN - (lumaNN * 0.5));
                        }
                        #line 717
                        if ( ( !doneP ) ){
                            lumaEndP = (lumaEndP - (lumaNN * 0.5));
                        }
                        doneN = (abs( lumaEndN ) >= gradientScaled);
                        doneP = (abs( lumaEndP ) >= gradientScaled);
                        if ( ( !doneN ) ){
                            posN.x  -= (offNP.x  * 2.0);
                        }
                        #line 721
                        if ( ( !doneN ) ){
                            posN.y  -= (offNP.y  * 2.0);
                        }
                        doneNP = (( !doneN ) || ( !doneP ));
                        if ( ( !doneP ) ){
                            posP.x  += (offNP.x  * 2.0);
                        }
                        if ( ( !doneP ) ){
                            posP.y  += (offNP.y  * 2.0);
                        }
                        #line 727
                        if ( doneNP ){
                            if ( ( !doneN ) ){
                                lumaEndN = FxaaLuma( xll_tex2Dlod( tex, vec4( posN.xy , 0.0, 0.0)));
                            }
                            if ( ( !doneP ) ){
                                lumaEndP = FxaaLuma( xll_tex2Dlod( tex, vec4( posP.xy , 0.0, 0.0)));
                            }
                            if ( ( !doneN ) ){
                                lumaEndN = (lumaEndN - (lumaNN * 0.5));
                            }
                            #line 731
                            if ( ( !doneP ) ){
                                lumaEndP = (lumaEndP - (lumaNN * 0.5));
                            }
                            doneN = (abs( lumaEndN ) >= gradientScaled);
                            doneP = (abs( lumaEndP ) >= gradientScaled);
                            if ( ( !doneN ) ){
                                posN.x  -= (offNP.x  * 2.0);
                            }
                            #line 735
                            if ( ( !doneN ) ){
                                posN.y  -= (offNP.y  * 2.0);
                            }
                            doneNP = (( !doneN ) || ( !doneP ));
                            if ( ( !doneP ) ){
                                posP.x  += (offNP.x  * 2.0);
                            }
                            if ( ( !doneP ) ){
                                posP.y  += (offNP.y  * 2.0);
                            }
                            #line 741
                            if ( doneNP ){
                                if ( ( !doneN ) ){
                                    lumaEndN = FxaaLuma( xll_tex2Dlod( tex, vec4( posN.xy , 0.0, 0.0)));
                                }
                                if ( ( !doneP ) ){
                                    lumaEndP = FxaaLuma( xll_tex2Dlod( tex, vec4( posP.xy , 0.0, 0.0)));
                                }
                                if ( ( !doneN ) ){
                                    lumaEndN = (lumaEndN - (lumaNN * 0.5));
                                }
                                #line 745
                                if ( ( !doneP ) ){
                                    lumaEndP = (lumaEndP - (lumaNN * 0.5));
                                }
                                doneN = (abs( lumaEndN ) >= gradientScaled);
                                doneP = (abs( lumaEndP ) >= gradientScaled);
                                if ( ( !doneN ) ){
                                    posN.x  -= (offNP.x  * 2.0);
                                }
                                #line 749
                                if ( ( !doneN ) ){
                                    posN.y  -= (offNP.y  * 2.0);
                                }
                                doneNP = (( !doneN ) || ( !doneP ));
                                if ( ( !doneP ) ){
                                    posP.x  += (offNP.x  * 2.0);
                                }
                                if ( ( !doneP ) ){
                                    posP.y  += (offNP.y  * 2.0);
                                }
                                #line 755
                                if ( doneNP ){
                                    if ( ( !doneN ) ){
                                        lumaEndN = FxaaLuma( xll_tex2Dlod( tex, vec4( posN.xy , 0.0, 0.0)));
                                    }
                                    if ( ( !doneP ) ){
                                        lumaEndP = FxaaLuma( xll_tex2Dlod( tex, vec4( posP.xy , 0.0, 0.0)));
                                    }
                                    if ( ( !doneN ) ){
                                        lumaEndN = (lumaEndN - (lumaNN * 0.5));
                                    }
                                    #line 759
                                    if ( ( !doneP ) ){
                                        lumaEndP = (lumaEndP - (lumaNN * 0.5));
                                    }
                                    doneN = (abs( lumaEndN ) >= gradientScaled);
                                    doneP = (abs( lumaEndP ) >= gradientScaled);
                                    if ( ( !doneN ) ){
                                        posN.x  -= (offNP.x  * 2.0);
                                    }
                                    #line 763
                                    if ( ( !doneN ) ){
                                        posN.y  -= (offNP.y  * 2.0);
                                    }
                                    doneNP = (( !doneN ) || ( !doneP ));
                                    if ( ( !doneP ) ){
                                        posP.x  += (offNP.x  * 2.0);
                                    }
                                    if ( ( !doneP ) ){
                                        posP.y  += (offNP.y  * 2.0);
                                    }
                                    #line 769
                                    if ( doneNP ){
                                        if ( ( !doneN ) ){
                                            lumaEndN = FxaaLuma( xll_tex2Dlod( tex, vec4( posN.xy , 0.0, 0.0)));
                                        }
                                        if ( ( !doneP ) ){
                                            lumaEndP = FxaaLuma( xll_tex2Dlod( tex, vec4( posP.xy , 0.0, 0.0)));
                                        }
                                        if ( ( !doneN ) ){
                                            lumaEndN = (lumaEndN - (lumaNN * 0.5));
                                        }
                                        #line 773
                                        if ( ( !doneP ) ){
                                            lumaEndP = (lumaEndP - (lumaNN * 0.5));
                                        }
                                        doneN = (abs( lumaEndN ) >= gradientScaled);
                                        doneP = (abs( lumaEndP ) >= gradientScaled);
                                        if ( ( !doneN ) ){
                                            posN.x  -= (offNP.x  * 4.0);
                                        }
                                        #line 777
                                        if ( ( !doneN ) ){
                                            posN.y  -= (offNP.y  * 4.0);
                                        }
                                        doneNP = (( !doneN ) || ( !doneP ));
                                        if ( ( !doneP ) ){
                                            posP.x  += (offNP.x  * 4.0);
                                        }
                                        if ( ( !doneP ) ){
                                            posP.y  += (offNP.y  * 4.0);
                                        }
                                        #line 783
                                        if ( doneNP ){
                                            if ( ( !doneN ) ){
                                                lumaEndN = FxaaLuma( xll_tex2Dlod( tex, vec4( posN.xy , 0.0, 0.0)));
                                            }
                                            if ( ( !doneP ) ){
                                                lumaEndP = FxaaLuma( xll_tex2Dlod( tex, vec4( posP.xy , 0.0, 0.0)));
                                            }
                                            if ( ( !doneN ) ){
                                                lumaEndN = (lumaEndN - (lumaNN * 0.5));
                                            }
                                            #line 787
                                            if ( ( !doneP ) ){
                                                lumaEndP = (lumaEndP - (lumaNN * 0.5));
                                            }
                                            doneN = (abs( lumaEndN ) >= gradientScaled);
                                            doneP = (abs( lumaEndP ) >= gradientScaled);
                                            if ( ( !doneN ) ){
                                                posN.x  -= (offNP.x  * 8.0);
                                            }
                                            #line 791
                                            if ( ( !doneN ) ){
                                                posN.y  -= (offNP.y  * 8.0);
                                            }
                                            doneNP = (( !doneN ) || ( !doneP ));
                                            if ( ( !doneP ) ){
                                                posP.x  += (offNP.x  * 8.0);
                                            }
                                            if ( ( !doneP ) ){
                                                posP.y  += (offNP.y  * 8.0);
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    #line 842
    dstN = (posM.x  - posN.x );
    dstP = (posP.x  - posM.x );
    if ( ( !horzSpan ) ){
        dstN = (posM.y  - posN.y );
    }
    if ( ( !horzSpan ) ){
        dstP = (posP.y  - posM.y );
    }
    #line 847
    goodSpanN = ((lumaEndN < 0.0) != lumaMLTZero);
    spanLength = (dstP + dstN);
    goodSpanP = ((lumaEndP < 0.0) != lumaMLTZero);
    spanLengthRcp = (1.0 / spanLength);
    #line 852
    directionN = (dstN < dstP);
    dst = min( dstN, dstP);
    goodSpan = (( directionN ) ? ( goodSpanN ) : ( goodSpanP ));
    subpixG = (subpixF * subpixF);
    #line 856
    pixelOffset = ((dst * ( -spanLengthRcp )) + 0.5);
    subpixH = (subpixG * fxaaQualitySubpix);
    pixelOffsetGood = (( goodSpan ) ? ( pixelOffset ) : ( 0.0 ));
    #line 860
    pixelOffsetSubpix = max( pixelOffsetGood, subpixH);
    if ( ( !horzSpan ) ){
        posM.x  += (pixelOffsetSubpix * lengthSign);
    }
    if ( horzSpan ){
        posM.y  += (pixelOffsetSubpix * lengthSign);
    }
    #line 866
    return vec4( xll_tex2Dlod( tex, vec4( posM, 0.0, 0.0)).xyz , rgbyM.w );
}
#line 978
vec4 xlat_main( in v2f i ) {
    float fxaaN = 0.5;
    #line 982
    return FxaaPixelShader( i.uv, i.uvPosPos, _MainTex, _MainTex, _MainTex, _MainTex_TexelSize.xy , (_MainTex_TexelSize.xyxy  * vec4( ( -fxaaN ), ( -fxaaN ), fxaaN, fxaaN)), (_MainTex_TexelSize.xyxy  * vec4( -2.0, -2.0, 2.0, 2.0)), (_MainTex_TexelSize.xyxy  * vec4( 8.0, 8.0, -4.0, -4.0)), 0.75, 0.166, 0.0833, 8.0, 0.125, 0.05, vec4( 1.0, -1.0, 0.25, -0.25));
}
varying vec4 xlv_SV_POSITION;
varying vec2 xlv_TEXCOORD0;
varying vec4 xlv_TEXCOORD1;
void main() {
    vec4 xl_retval;
    v2f xlt_i;
    xlt_i.pos = vec4( xlv_SV_POSITION);
    xlt_i.uv = vec2( xlv_TEXCOORD0);
    xlt_i.uvPosPos = vec4( xlv_TEXCOORD1);
    xl_retval = xlat_main( xlt_i);
    gl_FragData[0] = vec4( xl_retval);
}
