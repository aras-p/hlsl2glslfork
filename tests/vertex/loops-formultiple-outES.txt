
#line 10
struct v2f {
    highp vec4 pos;
    mediump vec4 color;
};
#line 5
struct appdata {
    highp vec4 vertex;
    highp vec3 normal;
};
#line 1
uniform highp vec4 unity_LightColor[4];
uniform highp mat4 UNITY_MATRIX_MVP;
#line 15
#line 15
v2f xlat_main( in appdata v ) {
    v2f o;
    o.pos = (UNITY_MATRIX_MVP * v.vertex);
    #line 19
    o.color = vec4( 0.0);
    highp int i = 0;
    for ( ; (i < 4); (++i)) {
        o.color += max( 0.0, float( unity_LightColor[i]));
    }
    highp int i_1 = 0;
    for ( ; (i_1 < 4); (++i_1)) {
        o.color *= min( 1.0, float( unity_LightColor[i_1]));
    }
    #line 24
    return o;
}
attribute vec4 xlat_attrib_POSITION;
attribute vec3 xlat_attrib_NORMAL;
varying mediump vec4 xlv_TEXCOORD0;
void main() {
    v2f xl_retval;
    appdata xlt_v;
    xlt_v.vertex = vec4(xlat_attrib_POSITION);
    xlt_v.normal = vec3(xlat_attrib_NORMAL);
    xl_retval = xlat_main( xlt_v);
    gl_Position = vec4(xl_retval.pos);
    xlv_TEXCOORD0 = vec4(xl_retval.color);
}

// uniforms:
// UNITY_MATRIX_MVP:<none> type 21 arrsize 0
// unity_LightColor:<none> type 12 arrsize 4
